# $Id$
#
# Auto-configuring Makefile for the Netwide Assembler.
#
# The Netwide Assembler is copyright (C) 1996 Simon Tatham and
# Julian Hall. All rights reserved. The software is
# redistributable under the licence given in the file "Licence"
# distributed in the NASM archive.

srcdir		= @srcdir@
VPATH		= @srcdir@
prefix		= @prefix@
exec_prefix	= @exec_prefix@
bindir		= @bindir@
mandir		= @mandir@

CC		= @CC@
CFLAGS		= @CFLAGS@ @GCCFLAGS@ -I$(srcdir) -I. 
LDFLAGS		= @LDFLAGS@

INSTALL		= @INSTALL@
INSTALL_PROGRAM	= @INSTALL_PROGRAM@
INSTALL_DATA	= @INSTALL_DATA@

NROFF		= @NROFF@

.SUFFIXES: .c .i .s .o .1 .man

.PHONY: all doc rdf install clean distclean cleaner spotless install_rdf
.PHONY: install_doc everything install_everything strip perlreq dist

.c.o:
	$(CC) -c $(CFLAGS) -o $@ $<

.c.s:
	$(CC) -S $(CFLAGS) -o $@ $<

.c.i:
	$(CC) -E $(CFLAGS) -o $@ $<

.1.man:
	$(NROFF) -man $< > $@

NASM = nasm.o nasmlib.o float.o insnsa.o assemble.o labels.o \
       parser.o outform.o output/outbin.o output/outaout.o output/outcoff.o output/outelf.o \
       output/outobj.o output/outas86.o output/outrdf2.o output/outdbg.o output/outieee.o \
       preproc.o listing.o eval.o

NDISASM = ndisasm.o disasm.o sync.o nasmlib.o insnsd.o

all: nasm ndisasm nasm.man ndisasm.man
	cd rdoff && $(MAKE) all

nasm: $(NASM)
	$(CC) $(LDFLAGS) -o nasm $(NASM)

ndisasm: $(NDISASM)
	$(CC) $(LDFLAGS) -o ndisasm $(NDISASM)

assemble.o: assemble.c nasm.h version.h insnsi.h nasmlib.h assemble.h insns.h
disasm.o: disasm.c nasm.h version.h insnsi.h disasm.h sync.h insns.h names.c insnsn.c
eval.o: eval.c eval.h nasm.h version.h insnsi.h nasmlib.h
float.o: float.c nasm.h version.h insnsi.h
insnsa.o: insnsa.c nasm.h version.h insnsi.h insns.h
insnsd.o: insnsd.c nasm.h version.h insnsi.h insns.h
labels.o: labels.c nasm.h version.h insnsi.h nasmlib.h
listing.o: listing.c nasm.h version.h insnsi.h nasmlib.h listing.h
nasm.o: nasm.c nasm.h version.h insnsi.h nasmlib.h preproc.h parser.h assemble.h labels.h \
 outform.h listing.h insns.h
nasmlib.o: nasmlib.c nasm.h version.h insnsi.h nasmlib.h names.c insnsn.c
ndisasm.o: ndisasm.c nasm.h version.h insnsi.h nasmlib.h sync.h disasm.h
output/outaout.o: output/outaout.c nasm.h version.h insnsi.h nasmlib.h outform.h
output/outas86.o: output/outas86.c nasm.h version.h insnsi.h nasmlib.h outform.h
output/outbin.o: output/outbin.c nasm.h version.h insnsi.h nasmlib.h outform.h
output/outcoff.o: output/outcoff.c nasm.h version.h insnsi.h nasmlib.h outform.h
output/outdbg.o: output/outdbg.c nasm.h version.h insnsi.h nasmlib.h outform.h
output/outelf.o: output/outelf.c nasm.h version.h insnsi.h nasmlib.h outform.h
outform.o: outform.c outform.h nasm.h version.h insnsi.h
output/outobj.o: output/outobj.c nasm.h version.h insnsi.h nasmlib.h outform.h
output/outrdf2.o: output/outrdf2.c nasm.h version.h insnsi.h nasmlib.h outform.h
output/outieee.o: output/outieee.c nasm.h version.h insnsi.h nasmlib.h outform.h
parser.o: parser.c nasm.h version.h insnsi.h nasmlib.h parser.h float.h names.c insnsn.c
preproc.o: preproc.c nasm.h version.h insnsi.h nasmlib.h macros.c
sync.o: sync.c sync.h

# These source files are automagically generated from a single
# instruction-table file by a Perl script. They're distributed,
# though, so it isn't necessary to have Perl just to recompile NASM
# from the distribution.

insnsa.c: insns.dat insns.pl
	perl $(srcdir)/insns.pl -a $(srcdir)/insns.dat
insnsd.c: insns.dat insns.pl
	perl $(srcdir)/insns.pl -d $(srcdir)/insns.dat
insnsi.h: insns.dat insns.pl
	perl $(srcdir)/insns.pl -i $(srcdir)/insns.dat
insnsn.c: insns.dat insns.pl
	perl $(srcdir)/insns.pl -n $(srcdir)/insns.dat

# These files contains all the standard macros that are derived from
# the version number.
version.h: version version.pl
	perl $(srcdir)/version.pl h < $(srcdir)/version > version.h

version.mac: version version.pl
	perl $(srcdir)/version.pl mac < $(srcdir)/version > version.mac

# This source file is generated from the standard macros file
# `standard.mac' by another Perl script. Again, it's part of the
# standard distribution.

macros.c: macros.pl standard.mac version.mac
	perl $(srcdir)/macros.pl $(srcdir)/standard.mac version.mac

# This target generates all files that require perl.
# This allows easier generation of distribution (see dist target).
PERLREQ = macros.c insnsa.c insnsd.c insnsi.h insnsn.c version.h version.mac 
perlreq: $(PERLREQ)

install: nasm ndisasm
	$(INSTALL_PROGRAM) nasm $(INSTALLROOT)$(bindir)/nasm
	$(INSTALL_PROGRAM) ndisasm $(INSTALLROOT)$(bindir)/ndisasm
	$(INSTALL_DATA) $(srcdir)/nasm.1 $(INSTALLROOT)$(mandir)/man1/nasm.1
	$(INSTALL_DATA) $(srcdir)/ndisasm.1 $(INSTALLROOT)$(mandir)/man1/ndisasm.1

clean:
	rm -f *.o *.s *.i
	rm -f output/*.o output/*.s output/*.i
	rm -f nasm ndisasm
	cd rdoff && $(MAKE) clean

distclean: clean
	rm -f config.* Makefile *~ *.bak *.lst *.bin
	rm -f output/*~ output/*.bak
	rm -f test/*.lst test/*.bin test/*.o test/*.bin
	cd rdoff && $(MAKE) distclean

cleaner: clean
	rm -f $(PERLREQ) *.man nasm.spec
	cd doc && $(MAKE) clean

spotless: distclean cleaner

strip:
	strip --strip-unneeded nasm ndisasm

rdf:
	cd rdoff && $(MAKE)

rdf_install install_rdf:
	cd rdoff && $(MAKE) install

doc:
	cd doc && $(MAKE) all

doc_install install_doc:
	cd doc && $(MAKE) install

everything: all doc rdf

install_everything: everything install install_doc install_rdf

dist: spotless perlreq
	autoconf
	rm -rf ./autom4te*.cache

tar: dist
	tar cvjf ../nasm-`cat version`-`date +%Y%m%d`.tar.bz2 ../`./nasm-dir`

nasm.spec: nasm.spec.in version
	sed -e s/@@VERSION@@/`cat version`/g < nasm.spec.in > nasm.spec

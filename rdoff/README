RDOFF Utils v0.2
================

The files contained in this directory are the C source code of a set
of tools (and general purpose library files) for the manipulation of
RDOFF version 1 object files. Here is a brief summary of their usage:

rdfdump
=======

This tool prints a list of the header records in an RDOFF object in 
human-readable form, and optionally prints a hex dump of the contents
of the code and data segments.

Usage:
	rdfdump [-v] filename

The -v flag specifies that the hex dump (see above) should be printed.

ldrdf
=====

This tool is a version of unix 'ld' (or DOS 'link') for use with RDOFF
files. It is capable of linking RDOFF objects, and libraries produced
with the 'rdlib' utility discussed below.

In normal usage, its command line takes the form:

	ldrdf [-o output-file] object files [-llibrary ...]

Libraries must be specified with their path as no search is performed.
Modules in libraries are not linked to the program unless they are
referred to.

Most of its options are not implemented, but those that are are listed here:

   -v	increase verbosity level. Currently 4 verbosity levels are 
	available: default (which only prints error information), normal
	(which prints information about the produced object, -v), medium
	(which prints information about what the program is doing, -v -v)
	and high (which prints all available information, -v -v -v).

   -p	change alignment value to which multiple segments combigned into
	a single segment should be aligned (must be either 1, 2, 4, 8,
	16, 32 or 256. Default is 16).

The default output filename is 'aout.rdx'.

rdx
===

This program simply loads and executes an RDOFF object, by calling
'_main', which it expects to be a C-style function, which will accept
two parameters, argc and argv in normal C style.

rdflib
======

This program creates a library file for use with ldrdf.

It is supplied with a shell script 'makelib' which should probably be used
to create libraries.

Usage:
	rdflib command library [optional arguments]

Valid commands are:

	c	Create the library
	a	Add a module (requires a filename and a name to give the
		module, ie 'rdflib a libc.rdl strcpy.rdf strcpy' puts the
		file 'strcpy.rdf' into 'libc.rdl', and calls it 'strcpy'.
	x	Extract (arguments are the opposite to the 'a' command,
		ie you'd do 'rdflib x libc.rdl strcpy strcpy.rdf to get
		a copy of strcpy.rdf back out again...)

Remove and List commands will be added soon (they're already documented
as existing, but I haven't had time to implement them... if anyone
else wants to do this, they're welcome to. The file format should be
amply documented in the source code... look at 'rdflib.c' and 'rdlib.c',
and the relevant sections of 'ldrdf.c' to see how libraries can be
handled).

Julian Hall (jules@dcs.warwick.ac.uk)

